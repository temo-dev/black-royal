import type { AppProps } from 'next/app';
import { ReactElement, ReactNode, Suspense } from 'react';
import DefaultLayout from '../components/Layouts/DefaultLayout';
import { Provider } from 'react-redux';
import store from '../store/index';
import Head from 'next/head';

import { appWithI18Next } from 'ni18n';
import { ni18nConfig } from 'ni18n.config.ts';

// Perfect Scrollbar
import 'react-perfect-scrollbar/dist/css/styles.css';
import '@mantine/core/styles.css';
import '@mantine/carousel/styles.css';
import '../styles/tailwind.css';

import { NextPage } from 'next';
import { MantineProvider, createTheme } from '@mantine/core';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';

export type NextPageWithLayout<P = {}, IP = P> = NextPage<P, IP> & {
    getLayout?: (page: ReactElement) => ReactNode;
};

type AppPropsWithLayout = AppProps & {
    Component: NextPageWithLayout;
};

const theme = createTheme({
    /** Put your mantine theme override here */
});

const App = ({ Component, pageProps }: AppPropsWithLayout) => {
    const getLayout = Component.getLayout ?? ((page) => <DefaultLayout>{page}</DefaultLayout>);
    const queryClient = new QueryClient();
    return (
        <QueryClientProvider client={queryClient}>
            <MantineProvider theme={theme}>
                <Provider store={store}>
                    <Head>
                        <title>Black Royal - Asian Kitchen</title>
                        <meta charSet="UTF-8" />
                        <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
                        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/favicon.png" />
                    </Head>

                    {getLayout(<Component {...pageProps} />)}
                </Provider>
            </MantineProvider>
        </QueryClientProvider>
    );
};
export default appWithI18Next(App, ni18nConfig);
